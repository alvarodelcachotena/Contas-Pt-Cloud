console.log('üèóÔ∏è  SQL para crear tabla de fornecedores')
console.log('==========================================')
console.log('')
console.log('üìã Copia y pega este SQL en el SQL Editor de Supabase:')
console.log('')
console.log('```sql')
console.log('-- Create suppliers table')
console.log('CREATE TABLE IF NOT EXISTS suppliers (')
console.log('    id SERIAL PRIMARY KEY,')
console.log('    tenant_id INTEGER NOT NULL REFERENCES tenants(id) ON DELETE CASCADE,')
console.log('    name VARCHAR(255) NOT NULL,')
console.log('    tax_id VARCHAR(50) UNIQUE,')
console.log('    email VARCHAR(255),')
console.log('    phone VARCHAR(50),')
console.log('    address TEXT,')
console.log('    postal_code VARCHAR(20),')
console.log('    city VARCHAR(100),')
console.log('    contact_person VARCHAR(255),')
console.log('    payment_terms VARCHAR(100),')
console.log('    notes TEXT,')
console.log('    is_active BOOLEAN DEFAULT true,')
console.log('    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),')
console.log('    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()')
console.log(');')
console.log('')
console.log('-- Add indexes for better performance')
console.log('CREATE INDEX IF NOT EXISTS idx_suppliers_tenant_id ON suppliers(tenant_id);')
console.log('CREATE INDEX IF NOT EXISTS idx_suppliers_tax_id ON suppliers(tax_id);')
console.log('CREATE INDEX IF NOT EXISTS idx_suppliers_name ON suppliers(name);')
console.log('')
console.log('-- Add RLS policies for suppliers')
console.log('ALTER TABLE suppliers ENABLE ROW LEVEL SECURITY;')
console.log('')
console.log('-- Policy for suppliers: users can only see suppliers from their tenant')
console.log('CREATE POLICY "Users can view suppliers from their tenant" ON suppliers')
console.log('    FOR SELECT USING (tenant_id = get_current_tenant_id());')
console.log('')
console.log('CREATE POLICY "Users can insert suppliers for their tenant" ON suppliers')
console.log('    FOR INSERT WITH CHECK (tenant_id = get_current_tenant_id());')
console.log('')
console.log('CREATE POLICY "Users can update suppliers from their tenant" ON suppliers')
console.log('    FOR UPDATE USING (tenant_id = get_current_tenant_id());')
console.log('')
console.log('CREATE POLICY "Users can delete suppliers from their tenant" ON suppliers')
console.log('    FOR DELETE USING (tenant_id = get_current_tenant_id());')
console.log('')
console.log('-- Add payment_type column to invoices table')
console.log('ALTER TABLE invoices ADD COLUMN IF NOT EXISTS payment_type VARCHAR(50) DEFAULT \'bank_transfer\';')
console.log('')
console.log('-- Add supplier_id column to invoices table to link with suppliers')
console.log('ALTER TABLE invoices ADD COLUMN IF NOT EXISTS supplier_id INTEGER REFERENCES suppliers(id) ON DELETE SET NULL;')
console.log('')
console.log('-- Add indexes for new columns')
console.log('CREATE INDEX IF NOT EXISTS idx_invoices_payment_type ON invoices(payment_type);')
console.log('CREATE INDEX IF NOT EXISTS idx_invoices_supplier_id ON invoices(supplier_id);')
console.log('')
console.log('-- Add invoice_id column to expenses table to track the relationship')
console.log('ALTER TABLE expenses ADD COLUMN IF NOT EXISTS invoice_id INTEGER REFERENCES invoices(id) ON DELETE SET NULL;')
console.log('')
console.log('-- Create index for invoice_id in expenses')
console.log('CREATE INDEX IF NOT EXISTS idx_expenses_invoice_id ON expenses(invoice_id);')
console.log('')
console.log('-- Update the updated_at timestamp function for suppliers')
console.log('CREATE OR REPLACE FUNCTION update_suppliers_updated_at()')
console.log('RETURNS TRIGGER AS $$')
console.log('BEGIN')
console.log('    NEW.updated_at = NOW();')
console.log('    RETURN NEW;')
console.log('END;')
console.log('$$ LANGUAGE plpgsql;')
console.log('')
console.log('-- Create trigger for suppliers updated_at')
console.log('DROP TRIGGER IF EXISTS trigger_update_suppliers_updated_at ON suppliers;')
console.log('CREATE TRIGGER trigger_update_suppliers_updated_at')
console.log('    BEFORE UPDATE ON suppliers')
console.log('    FOR EACH ROW')
console.log('    EXECUTE FUNCTION update_suppliers_updated_at();')
console.log('```')
console.log('')
console.log('üéØ Pasos para ejecutar:')
console.log('1. Ve a https://supabase.com/dashboard')
console.log('2. Selecciona tu proyecto')
console.log('3. Ve a "SQL Editor"')
console.log('4. Copia y pega el SQL de arriba')
console.log('5. Haz clic en "Run"')
console.log('')
console.log('‚ú® Despu√©s podr√°s:')
console.log('‚Ä¢ Ver el tipo de pago en las facturas')
console.log('‚Ä¢ Crear fornecedores en /suppliers')
console.log('‚Ä¢ Vincular facturas con fornecedores')
console.log('‚Ä¢ Las facturas de WhatsApp aparecer√°n autom√°ticamente en despesas')
